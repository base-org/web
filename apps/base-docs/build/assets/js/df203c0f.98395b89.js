"use strict";(self.webpackChunk_app_base_docs=self.webpackChunk_app_base_docs||[]).push([[9924],{76116:(e,t,s)=>{s.r(t),s.d(t,{default:()=>h});s(2784);var l=s(6277),a=s(89817),r=s(7239),n=s(48162),c=s(90211),o=s(1077),i=s(45567),u=s(54390),d=s(52322);function g(e){let{doc:t}=e;return(0,d.jsxs)("article",{className:"margin-vert--lg",children:[(0,d.jsx)(a.Z,{to:t.permalink,children:(0,d.jsx)("h2",{children:t.title})}),t.description&&(0,d.jsx)("p",{children:t.description})]})}function h(e){let{tag:t}=e;const s=function(){const{selectMessage:e}=(0,r.c)();return t=>e(t,(0,o.I)({id:"theme.docs.tagDocListPageTitle.nDocsTagged",description:'Pluralized label for "{count} docs tagged". Use as much plural forms (separated by "|") as your language support (see https://www.unicode.org/cldr/cldr-aux/charts/34/supplemental/language_plural_rules.html)',message:"One doc tagged|{count} docs tagged"},{count:t}))}(),h=(0,o.I)({id:"theme.docs.tagDocListPageTitle",description:"The title of the page for a docs tag",message:'{nDocsTagged} with "{tagName}"'},{nDocsTagged:s(t.count),tagName:t.label});return(0,d.jsxs)(n.FG,{className:(0,l.default)(c.k.wrapper.docsPages,c.k.page.docsTagDocListPage),children:[(0,d.jsx)(n.d,{title:h}),(0,d.jsx)(u.Z,{tag:"doc_tag_doc_list"}),(0,d.jsx)(i.Z,{children:(0,d.jsx)("div",{className:"container margin-vert--lg",children:(0,d.jsx)("div",{className:"row",children:(0,d.jsxs)("main",{className:"col col--8 col--offset-2",children:[(0,d.jsxs)("header",{className:"margin-bottom--xl",children:[(0,d.jsx)("h1",{children:h}),(0,d.jsx)(a.Z,{href:t.allTagsPath,children:(0,d.jsx)(o.Z,{id:"theme.tags.tagsPageLink",description:"The label of the link targeting the tag list page",children:"View All Tags"})})]}),(0,d.jsx)("section",{className:"margin-vert--lg",children:t.items.map((e=>(0,d.jsx)(g,{doc:e},e.id)))})]})})})})]})}},7239:(e,t,s)=>{s.d(t,{c:()=>u});var l=s(2784),a=s(37614),r=s(23716);const n=["zero","one","two","few","many","other"];function c(e){return n.filter((t=>e.includes(t)))}const o={locale:"en",pluralForms:c(["one","other"]),select:e=>1===e?"one":"other"};function i(){const{i18n:{currentLocale:e}}=(0,a.Z)();return(0,l.useMemo)((()=>{try{return function(e){const t=new Intl.PluralRules(e);return{locale:e,pluralForms:c(t.resolvedOptions().pluralCategories),select:e=>t.select(e)}}(e)}catch(t){return r.error(`Failed to use Intl.PluralRules for locale "${e}".\nDocusaurus will fallback to the default (English) implementation.\nError: ${t.message}\n`),o}}),[e])}function u(){const e=i();return{selectMessage:(t,s)=>function(e,t,s){const l=e.split("|");if(1===l.length)return l[0];l.length>s.pluralForms.length&&r.error(`For locale=${s.locale}, a maximum of ${s.pluralForms.length} plural forms are expected (${s.pluralForms.join(",")}), but the message contains ${l.length}: ${e}`);const a=s.select(t),n=s.pluralForms.indexOf(a);return l[Math.min(n,l.length-1)]}(s,t,e)}}}}]);