"use strict";(self.webpackChunk_app_base_docs=self.webpackChunk_app_base_docs||[]).push([[7805],{82247:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>d});var a=n(14041);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),l=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},y=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=l(n),y=o,d=u["".concat(s,".").concat(y)]||u[y]||g[y]||r;return n?a.createElement(d,c(c({ref:t},p),{},{components:n})):a.createElement(d,c({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,c=new Array(r);c[0]=y;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:o,c[1]=i;for(var l=2;l<r;l++)c[l]=n[l];return a.createElement.apply(null,c)}return a.createElement.apply(null,n)}y.displayName="MDXCreateElement"},50260:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>g,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(89575),o=(n(14041),n(82247));const r={title:"web3.js",slug:"/tools/web3",description:"Documentation for using web3.js, a JavaScript library for interacting with EVM-compatible blockchains. This page covers installation, setup, connecting to the Base network and interacting with smart contracts.",keywords:["web3.js","Base","Base mainnet","Base testnet","Base network","JavaScript","EVM","client library","blockchain","smart contracts","Ethereum","RPC URL"],hide_table_of_contents:!0},c="web3.js",i={unversionedId:"tools/web3",id:"tools/web3",title:"web3.js",description:"Documentation for using web3.js, a JavaScript library for interacting with EVM-compatible blockchains. This page covers installation, setup, connecting to the Base network and interacting with smart contracts.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/tools/web3.md",sourceDirName:"tools",slug:"/tools/web3",permalink:"/docs/tools/web3",draft:!1,tags:[],version:"current",frontMatter:{title:"web3.js",slug:"/tools/web3",description:"Documentation for using web3.js, a JavaScript library for interacting with EVM-compatible blockchains. This page covers installation, setup, connecting to the Base network and interacting with smart contracts.",keywords:["web3.js","Base","Base mainnet","Base testnet","Base network","JavaScript","EVM","client library","blockchain","smart contracts","Ethereum","RPC URL"],hide_table_of_contents:!0},sidebar:"developers",previous:{title:"viem",permalink:"/docs/tools/viem"},next:{title:"Bridging an L1 token to Base",permalink:"/docs/tokens/list"}},s={},l=[{value:"Install",id:"install",level:2},{value:"Setup",id:"setup",level:2},{value:"Connecting to Base",id:"connecting-to-base",level:2},{value:"Accessing data",id:"accessing-data",level:2},{value:"Deploying contracts",id:"deploying-contracts",level:2},{value:"Interacting with smart contracts",id:"interacting-with-smart-contracts",level:2}],p={toc:l},u="wrapper";function g(e){let{components:t,...n}=e;return(0,o.yg)(u,(0,a.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"web3js"},"web3.js"),(0,o.yg)("p",null,(0,o.yg)("a",{parentName:"p",href:"https://web3js.org/"},"web3.js")," is a JavaScript library that allows developers to interact with EVM-compatible blockchain networks."),(0,o.yg)("p",null,"You can use web3.js to interact with smart contracts deployed on the Base network."),(0,o.yg)("hr",null),(0,o.yg)("h2",{id:"install"},"Install"),(0,o.yg)("p",null,"To install web3.js run the following command:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-bash"},"npm install web3\n")),(0,o.yg)("h2",{id:"setup"},"Setup"),(0,o.yg)("p",null,"Before you can start using web3.js, you need to import it into your project."),(0,o.yg)("p",null,"Add the following line of code to the top of your file to import web3.js:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},"//web3.js v1\nconst Web3 = require('web3');\n\n//web3.js v4\nconst { Web3 } = require('web3');\n")),(0,o.yg)("h2",{id:"connecting-to-base"},"Connecting to Base"),(0,o.yg)("p",null,"You can connect to Base by instantiating a new web3.js ",(0,o.yg)("inlineCode",{parentName:"p"},"Web3")," object with a RPC URL of the Base network:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},"const { Web3 } = require('web3');\n\nconst web3 = new Web3('https://mainnet.base.org');\n")),(0,o.yg)("admonition",{type:"info"},(0,o.yg)("p",{parentName:"admonition"},"To alternatively connect to Base Sepolia (testnet), change the above URL from ",(0,o.yg)("inlineCode",{parentName:"p"},"https://mainnet.base.org")," to ",(0,o.yg)("inlineCode",{parentName:"p"},"https://sepolia.base.org"),".")),(0,o.yg)("h2",{id:"accessing-data"},"Accessing data"),(0,o.yg)("p",null,"Once you have created a provider, you can use it to read data from the Base network."),(0,o.yg)("p",null,"For example, you can use the ",(0,o.yg)("inlineCode",{parentName:"p"},"getBlockNumber")," method to get the latest block:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},"async function getLatestBlock(address) {\n  const latestBlock = await web3.eth.getBlockNumber();\n  console.log(latestBlock.toString());\n}\n")),(0,o.yg)("h2",{id:"deploying-contracts"},"Deploying contracts"),(0,o.yg)("p",null,"Before you can deploy a contract to the Base network using web3.js, you must first create an account."),(0,o.yg)("p",null,"You can create an account by using ",(0,o.yg)("inlineCode",{parentName:"p"},"web3.eth.accounts"),":"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},"const privateKey = \u201cPRIVATE_KEY\u201d;\nconst account = web3.eth.accounts.privateKeyToAccount(privateKey);\n")),(0,o.yg)("admonition",{type:"info"},(0,o.yg)("p",{parentName:"admonition"},(0,o.yg)("inlineCode",{parentName:"p"},"PRIVATE_KEY")," is the private key of the wallet to use when creating the account.")),(0,o.yg)("h2",{id:"interacting-with-smart-contracts"},"Interacting with smart contracts"),(0,o.yg)("p",null,"You can use web3.js to interact with a smart contract on Base by instantiating a ",(0,o.yg)("inlineCode",{parentName:"p"},"Contract")," object using the ABI and address of a deployed contract:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},'const abi = [\n\u2026 // ABI of deployed contract\n];\n\nconst contractAddress = "CONTRACT_ADDRESS"\n\nconst contract = new web3.eth.Contract(abi, contractAddress);\n')),(0,o.yg)("p",null,"Once you have created a ",(0,o.yg)("inlineCode",{parentName:"p"},"Contract")," object, you can use it to call desired methods on the smart contract:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},"async function setValue(value) {\n  // write query\n  const tx = await contract.methods.set(value).send();\n  console.log(tx.transactionHash);\n}\n\nasync function getValue() {\n  // read query\n  const value = await contract.methods.get().call();\n  console.log(value.toString());\n}\n")),(0,o.yg)("admonition",{type:"info"},(0,o.yg)("p",{parentName:"admonition"},"For more information on deploying contracts on Base, see ",(0,o.yg)("a",{parentName:"p",href:"/guides/deploy-smart-contracts"},"Deploying a Smart Contract"),".")))}g.isMDXComponent=!0}}]);