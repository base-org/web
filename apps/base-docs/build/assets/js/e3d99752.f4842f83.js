"use strict";(self.webpackChunk_app_base_docs=self.webpackChunk_app_base_docs||[]).push([[2215],{82247:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>h});var a=t(14041);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),s=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=s(e.components);return a.createElement(l.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},y=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=s(t),y=r,h=d["".concat(l,".").concat(y)]||d[y]||u[y]||o;return t?a.createElement(h,i(i({ref:n},p),{},{components:t})):a.createElement(h,i({ref:n},p))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=y;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c[d]="string"==typeof e?e:r,i[1]=c;for(var s=2;s<o;s++)i[s]=t[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}y.displayName="MDXCreateElement"},46709:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var a=t(89575),r=(t(14041),t(82247));const o={title:"Inheritance",description:"Learn how to use inheritance to bring functionality from one contract into another.",hide_table_of_contents:!1},i=void 0,c={unversionedId:"docs/inheritance/inheritance-sbs",id:"docs/inheritance/inheritance-sbs",title:"Inheritance",description:"Learn how to use inheritance to bring functionality from one contract into another.",source:"@site/base-camp/docs/inheritance/inheritance-sbs.md",sourceDirName:"docs/inheritance",slug:"/docs/inheritance/inheritance-sbs",permalink:"/base-camp/docs/inheritance/inheritance-sbs",draft:!1,tags:[],version:"current",frontMatter:{title:"Inheritance",description:"Learn how to use inheritance to bring functionality from one contract into another.",hide_table_of_contents:!1},sidebar:"docs",previous:{title:"Inheritance",permalink:"/base-camp/docs/inheritance/inheritance-vid"},next:{title:"Multiple Inheritance",permalink:"/base-camp/docs/inheritance/multiple-inheritance-vid"}},l={},s=[{value:"Objectives",id:"objectives",level:2},{value:"Inheritance",id:"inheritance",level:2},{value:"Inheriting from Another Contract",id:"inheriting-from-another-contract",level:3},{value:"Internal Functions and Inheritance",id:"internal-functions-and-inheritance",level:3},{value:"Internal vs. Private",id:"internal-vs-private",level:3},{value:"Inheritance and Contract Size",id:"inheritance-and-contract-size",level:3},{value:"Conclusion",id:"conclusion",level:2}],p={toc:s},d="wrapper";function u(e){let{components:n,...t}=e;return(0,r.yg)(d,(0,a.A)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"Solidity is an object-oriented language. Contracts can inherit from one another, allowing efficient reuse of code."),(0,r.yg)("hr",null),(0,r.yg)("h2",{id:"objectives"},"Objectives"),(0,r.yg)("p",null,"By the end of this lesson you should be able to:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Write a smart contract that inherits from another contract"),(0,r.yg)("li",{parentName:"ul"},"Describe the impact inheritance has on the byte code size limit")),(0,r.yg)("hr",null),(0,r.yg)("h2",{id:"inheritance"},"Inheritance"),(0,r.yg)("p",null,"Create a new contract file in Remix called ",(0,r.yg)("inlineCode",{parentName:"p"},"Inheritance.sol")," and add two simple contracts, each with a function identifying which contract called it:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-solidity"},'// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.17;\n\ncontract ContractB {\n    function whoAmI() external pure returns (string memory) {\n        return "contract B";\n    }\n}\n\ncontract ContractA {\n    function whoAmI() external pure returns (string memory) {\n        return "contract A";\n    }\n}\n')),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"ContractA"),' says that it is "contract A" and ',(0,r.yg)("inlineCode",{parentName:"p"},"ContractB"),' says that it is "contract B".'),(0,r.yg)("h3",{id:"inheriting-from-another-contract"},"Inheriting from Another Contract"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"https://docs.soliditylang.org/en/v0.8.17/contracts.html"},"Inheritance")," between contracts is indicated by the ",(0,r.yg)("inlineCode",{parentName:"p"},"is")," keyword in the contract declaration. Update ",(0,r.yg)("inlineCode",{parentName:"p"},"ContractA")," so that it ",(0,r.yg)("inlineCode",{parentName:"p"},"is")," ",(0,r.yg)("inlineCode",{parentName:"p"},"ContractB"),", and delete the ",(0,r.yg)("inlineCode",{parentName:"p"},"whoAmI")," function from ",(0,r.yg)("inlineCode",{parentName:"p"},"ContractA"),"."),(0,r.yg)("details",null,(0,r.yg)("summary",null,"Reveal code"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-solidity"},'contract ContractB {\n    function whoAmI() external pure returns (string memory) {\n        return "contract B";\n    }\n}\n\ncontract ContractA is ContractB {\n\n}\n'))),(0,r.yg)("br",null),(0,r.yg)("p",null,"Deploy and test again. Even though ",(0,r.yg)("inlineCode",{parentName:"p"},"ContractA")," doesn't have any functions in it, the deployment still shows the button to call ",(0,r.yg)("inlineCode",{parentName:"p"},"whoAmI"),". Call it. ",(0,r.yg)("inlineCode",{parentName:"p"},"ContractA"),' now reports that it is "contract B", due to the inheritance of the function from ',(0,r.yg)("inlineCode",{parentName:"p"},"Contract B"),"."),(0,r.yg)("h3",{id:"internal-functions-and-inheritance"},"Internal Functions and Inheritance"),(0,r.yg)("p",null,"Contracts can call the ",(0,r.yg)("inlineCode",{parentName:"p"},"internal")," functions from contracts they inherit from. Add an ",(0,r.yg)("inlineCode",{parentName:"p"},"internal")," function to ",(0,r.yg)("inlineCode",{parentName:"p"},"ContractB")," called ",(0,r.yg)("inlineCode",{parentName:"p"},"whoAmIInternal"),' that returns "contract B".'),(0,r.yg)("p",null,"Add an external function called ",(0,r.yg)("inlineCode",{parentName:"p"},"whoAmIExternal")," that returns the results of a call to ",(0,r.yg)("inlineCode",{parentName:"p"},"whoAmIInternal"),"."),(0,r.yg)("details",null,(0,r.yg)("summary",null,"Reveal code"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-solidity"},'contract ContractB {\n    function whoAmI() external pure returns (string memory) {\n        return "contract B";\n    }\n\n    function whoAmIInternal() internal pure returns (string memory) {\n        return "contract B";\n    }\n}\n\ncontract ContractA is ContractB {\n    function whoAmExternal() external pure returns (string memory) {\n        return whoAmIInternal();\n    }\n}\n'))),(0,r.yg)("br",null),(0,r.yg)("p",null,"Deploy and test. Note that in the deployment for ",(0,r.yg)("inlineCode",{parentName:"p"},"ContractB"),", the ",(0,r.yg)("inlineCode",{parentName:"p"},"whoAmIInternal")," function is ",(0,r.yg)("strong",{parentName:"p"},"not")," available, as it is ",(0,r.yg)("inlineCode",{parentName:"p"},"internal"),". However, calling ",(0,r.yg)("inlineCode",{parentName:"p"},"whoAmIExternal")," can call the ",(0,r.yg)("inlineCode",{parentName:"p"},"internal"),' function and return the expected result of "contract B".'),(0,r.yg)("h3",{id:"internal-vs-private"},"Internal vs. Private"),(0,r.yg)("p",null,"You cannot call a ",(0,r.yg)("inlineCode",{parentName:"p"},"private")," function from a contract that inherits from the contract containing that function."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-solidity"},'// Bad code example, do not use\ncontract ContractB {\n    function whoAmIPrivate() private pure returns (string memory) {\n        return "contract B";\n    }\n}\n\ncontract ContractA is ContractB {\n    function whoAmExternal() external pure returns (string memory) {\n        return whoAmIPrivate();\n    }\n}\n')),(0,r.yg)("p",null,"The compiler will raise an error:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-text"},"from solidity:\nDeclarationError: Undeclared identifier.\n  --\x3e contracts/Inheritance.sol:17:16:\n   |\n17 |         return whoAmIPrivate();\n   |                ^^^^^^^^^^^^^\n")),(0,r.yg)("h3",{id:"inheritance-and-contract-size"},"Inheritance and Contract Size"),(0,r.yg)("p",null,"A contract that inherits from another contract will have that contract's bytecode included within its own. You can view this by opening settings in Remix and turning ",(0,r.yg)("em",{parentName:"p"},"Artifact Generation")," back on. The bytecode for each compiled contract will be present in the JSON file matching that contract's name within the ",(0,r.yg)("inlineCode",{parentName:"p"},"artifacts")," folder."),(0,r.yg)("p",null,"Any empty contract:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-solidity"},"contract EmptyContract {\n\n}\n")),(0,r.yg)("p",null,"Will compile into something similar to this:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-text"},"6080604052600080fdfea2646970667358221220df894b82f904e22617d7e40150306e2d2e8cb2ca5dcacb666a0c3d40f5f988c464736f6c63430008110033\n")),(0,r.yg)("p",null,"A slightly more complex contract:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-solidity"},'contract notEmptyContract {\n    function sayHello() public pure returns (string memory) {\n        return "To whom it may concern, I write you after a long period of silence to alert you that after much reflection, it occurs to me that I don\'t think you have fully considered...";\n    }\n}\n')),(0,r.yg)("p",null,"Will have more complex bytecode. In this case, mostly to store the long string present in the return:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-text"},"608060405234801561001057600080fd5b50610201806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063ef5fb05b14610030575b600080fd5b61003861004e565b60405161004591906100fe565b60405180910390f35b60606040518060e0016040528060ab815260200161012160ab9139905090565b600081519050919050565b600082825260208201905092915050565b60005b838110156100a857808201518184015260208101905061008d565b60008484015250505050565b6000601f19601f8301169050919050565b60006100d08261006e565b6100da8185610079565b93506100ea81856020860161008a565b6100f3816100b4565b840191505092915050565b6000602082019050818103600083015261011881846100c5565b90509291505056fe546f2077686f6d206974206d617920636f6e6365726e2c204920777269746520796f752061667465722061206c6f6e6720706572696f64206f662073696c656e636520746f20616c65727420796f752074686174206166746572206d756368207265666c656374696f6e2c206974206f636375727320746f206d652074686174204920646f6e2774207468696e6b20796f7520686176652066756c6c7920636f6e736964657265642e2e2ea264697066735822122058d68a2853aaa473c9a5ff4dba0cc94657cb2a5a87ce3a986090a7ab991055a464736f6c63430008110033\n")),(0,r.yg)("p",null,"However, if the empty contract inherits from the not empty contract:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-solidity"},"contract EmptyContract is notEmptyContract {\n\n}\n")),(0,r.yg)("p",null,"The resulting bytecode will include that of the contract inherited from:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-text"},"608060405234801561001057600080fd5b50610201806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063ef5fb05b14610030575b600080fd5b61003861004e565b60405161004591906100fe565b60405180910390f35b60606040518060e0016040528060ab815260200161012160ab9139905090565b600081519050919050565b600082825260208201905092915050565b60005b838110156100a857808201518184015260208101905061008d565b60008484015250505050565b6000601f19601f8301169050919050565b60006100d08261006e565b6100da8185610079565b93506100ea81856020860161008a565b6100f3816100b4565b840191505092915050565b6000602082019050818103600083015261011881846100c5565b90509291505056fe546f2077686f6d206974206d617920636f6e6365726e2c204920777269746520796f752061667465722061206c6f6e6720706572696f64206f662073696c656e636520746f20616c65727420796f752074686174206166746572206d756368207265666c656374696f6e2c206974206f636375727320746f206d652074686174204920646f6e2774207468696e6b20796f7520686176652066756c6c7920636f6e736964657265642e2e2ea264697066735822122088e486b0a77cd3e2ce809e0a086052815913daec73ebd731e30496d650784f7664736f6c63430008110033\n")),(0,r.yg)("hr",null),(0,r.yg)("h2",{id:"conclusion"},"Conclusion"),(0,r.yg)("p",null,"In this lesson, you've learned how to use inheritance to include the functionality of one contract in another. You've also learned that inheriting contracts can call ",(0,r.yg)("inlineCode",{parentName:"p"},"internal")," functions, but they cannot call ",(0,r.yg)("inlineCode",{parentName:"p"},"private")," functions. You've also learned that inheriting from a contract adds the size of that contract's bytecode to the total deployed size."),(0,r.yg)("hr",null))}u.isMDXComponent=!0}}]);