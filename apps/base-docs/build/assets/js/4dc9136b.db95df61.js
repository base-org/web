"use strict";(self.webpackChunk_app_base_docs=self.webpackChunk_app_base_docs||[]).push([[3415],{82247:(e,t,a)=>{a.d(t,{xA:()=>p,yg:()=>g});var n=a(14041);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(a),h=r,g=d["".concat(s,".").concat(h)]||d[h]||u[h]||o;return a?n.createElement(g,i(i({ref:t},p),{},{components:a})):n.createElement(g,i({ref:t},p))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},96343:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=a(89575),r=(a(14041),a(82247));const o={title:"Setup and Overview",description:"An overview of hardhat, a smart contract development framework",hide_table_of_contents:!1},i=void 0,l={unversionedId:"docs/hardhat-setup-overview/hardhat-setup-overview-sbs",id:"docs/hardhat-setup-overview/hardhat-setup-overview-sbs",title:"Setup and Overview",description:"An overview of hardhat, a smart contract development framework",source:"@site/base-camp/docs/hardhat-setup-overview/hardhat-setup-overview-sbs.md",sourceDirName:"docs/hardhat-setup-overview",slug:"/docs/hardhat-setup-overview/hardhat-setup-overview-sbs",permalink:"/base-camp/docs/hardhat-setup-overview/hardhat-setup-overview-sbs",draft:!1,tags:[],version:"current",frontMatter:{title:"Setup and Overview",description:"An overview of hardhat, a smart contract development framework",hide_table_of_contents:!1},sidebar:"docs",previous:{title:"Creating a Project",permalink:"/base-camp/docs/hardhat-setup-overview/creating-a-project-vid"},next:{title:"Testing Overview",permalink:"/base-camp/docs/hardhat-testing/testing-overview-vid"}},s={},c=[{value:"Objectives",id:"objectives",level:2},{value:"Overview",id:"overview",level:2},{value:"Installing Hardhat and creating a new project",id:"installing-hardhat-and-creating-a-new-project",level:2},{value:"Anatomy of a Hardhat project",id:"anatomy-of-a-hardhat-project",level:3},{value:"Configuration",id:"configuration",level:3},{value:"Compiling smart contracts",id:"compiling-smart-contracts",level:2}],p={toc:c},d="wrapper";function u(e){let{components:t,...a}=e;return(0,r.yg)(d,(0,n.A)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"In this article, you'll learn about Hardhat: a development framework to create, test, and deploy smart contracts to Ethereum and other supported EVM chains."),(0,r.yg)("hr",null),(0,r.yg)("h2",{id:"objectives"},"Objectives"),(0,r.yg)("p",null,"By the end of this lesson, you should be able to:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Install and create a new Hardhat project with Typescript support"),(0,r.yg)("li",{parentName:"ul"},"Describe the organization and folder structure of a Hardhat project"),(0,r.yg)("li",{parentName:"ul"},"List the use and properties of hardhat.config.ts")),(0,r.yg)("hr",null),(0,r.yg)("h2",{id:"overview"},"Overview"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"https://hardhat.org/"},"Hardhat")," is a development environment that allows you to develop and test Solidity on your local machine. It includes debugging and unit testing tools, and has an ecosystem of third-party-developed plugins that ease development and deployment."),(0,r.yg)("p",null,"Among other things, these plugins can help you deploy contracts, see the size of your compiled byte-code, and even see unit test coverage."),(0,r.yg)("h2",{id:"installing-hardhat-and-creating-a-new-project"},"Installing Hardhat and creating a new project"),(0,r.yg)("p",null,"As a pre-requisite to start developing smart contracts with Hardhat, Node.js must be installed."),(0,r.yg)("p",null,"You can then simply type ",(0,r.yg)("inlineCode",{parentName:"p"},"npx hardhat init"),", which provides a set of options to bootstrap a Hardhat project:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},'888    888                      888 888               888\n888    888                      888 888               888\n888    888                      888 888               888\n8888888888  8888b.  888d888 .d88888 88888b.   8888b.  888888\n888    888     "88b 888P"  d88" 888 888 "88b     "88b 888\n888    888 .d888888 888    888  888 888  888 .d888888 888\n888    888 888  888 888    Y88b 888 888  888 888  888 Y88b.\n888    888 "Y888888 888     "Y88888 888  888 "Y888888  "Y888\n\n\ud83d\udc77 Welcome to Hardhat v2.11.2 \ud83d\udc77\u200d\n\n? What do you want to do? \u2026\n\u276f Create a JavaScript project\n  Create a TypeScript project\n  Create an empty hardhat.config.js\n  Quit\n')),(0,r.yg)("p",null,"You are encouraged to select ",(0,r.yg)("strong",{parentName:"p"},"Create a TypeScript project"),", since it provides you with some benefits such as static typing that can reduce the number of errors during development."),(0,r.yg)("p",null,"You can then enter 'yes' for the remaining options, which include installing the ",(0,r.yg)("inlineCode",{parentName:"p"},"@nomicfoundation/hardhat-toolbox")," package that contains some of the most used Hardhat plugins."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"\u2714 What do you want to do? \xb7 Create a TypeScript project\n\u2714 Hardhat project root: \xb7 {any location}\n\u2714 Do you want to add a .gitignore? (Y/n) \xb7 y\n\u2714 Do you want to install this sample project's dependencies with npm (hardhat @nomicfoundation/hardhat-toolbox)? (Y/n) \xb7 y\n")),(0,r.yg)("h3",{id:"anatomy-of-a-hardhat-project"},"Anatomy of a Hardhat project"),(0,r.yg)("p",null,"After you complete the previous step, the folder structure looks like the following:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"contracts # contracts will go here"),(0,r.yg)("li",{parentName:"ul"},"hardhat.config.ts # configuration file for hardhat"),(0,r.yg)("li",{parentName:"ul"},"node_modules # node.js package folder"),(0,r.yg)("li",{parentName:"ul"},"package-lock.json # node.js package lock file"),(0,r.yg)("li",{parentName:"ul"},"package.json # node.js package file"),(0,r.yg)("li",{parentName:"ul"},"scripts # place the scripts here"),(0,r.yg)("li",{parentName:"ul"},"test # place the tests here"),(0,r.yg)("li",{parentName:"ul"},"tsconfig.json # typescript configuration file")),(0,r.yg)("p",null,"It is also common to save hardhat tasks in a ",(0,r.yg)("inlineCode",{parentName:"p"},"task")," folder."),(0,r.yg)("p",null,"It is important to mention that all these paths are fully configurable in the ",(0,r.yg)("inlineCode",{parentName:"p"},"hardhat.config.ts")," file. You can specify a different folder for the contracts, such as ",(0,r.yg)("inlineCode",{parentName:"p"},"src"),"."),(0,r.yg)("h3",{id:"configuration"},"Configuration"),(0,r.yg)("p",null,"You can configure the Hardhat environment in the ",(0,r.yg)("inlineCode",{parentName:"p"},"hardhat.config.ts")," file."),(0,r.yg)("p",null,"Since the project uses Typescript, you have the benefit of using static typing."),(0,r.yg)("p",null,"The following is the default configuration:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},"import { HardhatUserConfig } from 'hardhat/config';\nimport '@nomicfoundation/hardhat-toolbox';\n\nconst config: HardhatUserConfig = {\n  solidity: '0.8.17',\n};\n\nexport default config;\n")),(0,r.yg)("p",null,"You can configure aspects such as:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"default network"),(0,r.yg)("li",{parentName:"ul"},"networks"),(0,r.yg)("li",{parentName:"ul"},"solidity"),(0,r.yg)("li",{parentName:"ul"},"paths"),(0,r.yg)("li",{parentName:"ul"},"mocha")),(0,r.yg)("p",null,"For example:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},"import { HardhatUserConfig } from 'hardhat/config';\nimport '@nomicfoundation/hardhat-toolbox';\n\nconst config: HardhatUserConfig = {\n  defaultNetwork: 'base',\n  networks: {\n    base_sepolia: {\n      url: 'https://sepolia.base.org',\n      accounts: ['<private key 1>'],\n    },\n    sepolia: {\n      url: 'https://sepolia.infura.io/v3/<key>',\n      accounts: ['<private key 1>', '<private key 2>'],\n    },\n  },\n  solidity: {\n    version: '0.8.17',\n    settings: {\n      optimizer: {\n        enabled: true,\n        runs: 200,\n      },\n    },\n  },\n  paths: {\n    sources: './contracts',\n    tests: './test',\n    cache: './cache',\n    artifacts: './artifacts',\n  },\n};\n\nexport default config;\n")),(0,r.yg)("h2",{id:"compiling-smart-contracts"},"Compiling smart contracts"),(0,r.yg)("p",null,"At this point, you should have a Hardhat project up and running to start developing smart contracts. You may notice Hardhat includes a sample contract called ",(0,r.yg)("inlineCode",{parentName:"p"},"Lock.sol"),"."),(0,r.yg)("p",null,"To run your first command, enter ",(0,r.yg)("inlineCode",{parentName:"p"},"npx hardhat compile"),", which compiles the smart contracts and generates the correct ",(0,r.yg)("a",{parentName:"p",href:"https://hardhat.org/hardhat-runner/docs/advanced/artifacts"},"artifacts")," that includes the bytecode and ABI."),(0,r.yg)("p",null,"After running the ",(0,r.yg)("inlineCode",{parentName:"p"},"npx hardhat compile")," command, you should see a new folder named artifacts. This folder contains each contract name as a folder and a\n",(0,r.yg)("inlineCode",{parentName:"p"},"{ContractName}.json")," file."),(0,r.yg)("hr",null))}u.isMDXComponent=!0}}]);