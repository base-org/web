"use strict";(self.webpackChunk_app_base_docs=self.webpackChunk_app_base_docs||[]).push([[8610],{82247:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>h});var a=n(14041);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),l=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=l(n),d=i,h=m["".concat(s,".").concat(d)]||m[d]||u[d]||r;return n?a.createElement(h,o(o({ref:t},p),{},{components:n})):a.createElement(h,o({ref:t},p))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[m]="string"==typeof e?e:i,o[1]=c;for(var l=2;l<r;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},40360:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var a=n(89575),i=(n(14041),n(82247));const r={title:"viem",slug:"/tools/viem",description:"Documentation for using Viem, a TypeScript interface for EVM-compatible blockchains. This page covers installation, setup, and various functionalities such as reading and writing blockchain data and interacting with smart contracts on Base.",keywords:["viem","Base","Base mainnet","Base testnet","Ethereum","smart contracts","blockchain","RPC URL","JavaScript","TypeScript"],hide_table_of_contents:!0},o="viem",c={unversionedId:"tools/viem",id:"tools/viem",title:"viem",description:"Documentation for using Viem, a TypeScript interface for EVM-compatible blockchains. This page covers installation, setup, and various functionalities such as reading and writing blockchain data and interacting with smart contracts on Base.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/tools/viem.md",sourceDirName:"tools",slug:"/tools/viem",permalink:"/docs/tools/viem",draft:!1,tags:[],version:"current",frontMatter:{title:"viem",slug:"/tools/viem",description:"Documentation for using Viem, a TypeScript interface for EVM-compatible blockchains. This page covers installation, setup, and various functionalities such as reading and writing blockchain data and interacting with smart contracts on Base.",keywords:["viem","Base","Base mainnet","Base testnet","Ethereum","smart contracts","blockchain","RPC URL","JavaScript","TypeScript"],hide_table_of_contents:!0},sidebar:"developers",previous:{title:"thirdweb SDK",permalink:"/docs/tools/thirdweb-sdk"},next:{title:"web3.js",permalink:"/docs/tools/web3"}},s={},l=[{value:"Install",id:"install",level:2},{value:"Setup",id:"setup",level:2},{value:"Reading data from the blockchain",id:"reading-data-from-the-blockchain",level:2},{value:"Writing data to the blockchain",id:"writing-data-to-the-blockchain",level:2},{value:"Interacting with smart contracts",id:"interacting-with-smart-contracts",level:2}],p={toc:l},m="wrapper";function u(e){let{components:t,...n}=e;return(0,i.yg)(m,(0,a.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"viem"},"viem"),(0,i.yg)("admonition",{type:"info"},(0,i.yg)("p",{parentName:"admonition"},"Viem is currently only available on Base Sepolia testnet.")),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"https://viem.sh/"},"viem")," a TypeScript interface for Ethereum that provides low-level stateless primitives for interacting with Ethereum."),(0,i.yg)("p",null,"You can use viem to interact with smart contracts deployed on Base."),(0,i.yg)("hr",null),(0,i.yg)("h2",{id:"install"},"Install"),(0,i.yg)("p",null,"To install viem run the following command:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"npm install --save viem\n")),(0,i.yg)("h2",{id:"setup"},"Setup"),(0,i.yg)("p",null,"Before you can start using viem, you need to setup a ",(0,i.yg)("a",{parentName:"p",href:"https://viem.sh/docs/clients/intro.html"},"Client")," with a desired ",(0,i.yg)("a",{parentName:"p",href:"https://viem.sh/docs/clients/intro.html"},"Transport")," and ",(0,i.yg)("a",{parentName:"p",href:"https://viem.sh/docs/chains/introduction"},"Chain"),"."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-javascript"},"import { createPublicClient, http } from 'viem';\nimport { base } from 'viem/chains';\n\nconst client = createPublicClient({\n  chain: base,\n  transport: http(),\n});\n")),(0,i.yg)("admonition",{type:"info"},(0,i.yg)("p",{parentName:"admonition"},"To use Base, you must specify ",(0,i.yg)("inlineCode",{parentName:"p"},"base")," as the chain when creating a Client."),(0,i.yg)("p",{parentName:"admonition"},"To use Base Sepolia (testnet), replace ",(0,i.yg)("inlineCode",{parentName:"p"},"base")," with ",(0,i.yg)("inlineCode",{parentName:"p"},"baseSepolia"),".")),(0,i.yg)("h2",{id:"reading-data-from-the-blockchain"},"Reading data from the blockchain"),(0,i.yg)("p",null,"Once you have created a client, you can use it to read and access data from Base using ",(0,i.yg)("a",{parentName:"p",href:"https://viem.sh/docs/actions/public/introduction.html"},"Public Actions")),(0,i.yg)("p",null,'Public Actions are client methods that map one-to-one with a "public" Ethereum RPC method (',(0,i.yg)("inlineCode",{parentName:"p"},"eth_blockNumber"),", ",(0,i.yg)("inlineCode",{parentName:"p"},"eth_getBalance"),", etc.)"),(0,i.yg)("p",null,"For example, you can use the ",(0,i.yg)("inlineCode",{parentName:"p"},"getBlockNumber")," client method to get the latest block:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-javascript"},"const blockNumber = await client.getBlockNumber();\n")),(0,i.yg)("h2",{id:"writing-data-to-the-blockchain"},"Writing data to the blockchain"),(0,i.yg)("p",null,"In order to write data to Base, you need to create a Wallet client (",(0,i.yg)("inlineCode",{parentName:"p"},"createWalletClient"),") and specify an ",(0,i.yg)("a",{parentName:"p",href:"https://ethereum.org/en/developers/docs/accounts/"},(0,i.yg)("inlineCode",{parentName:"a"},"Account"))," to use."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-javascript"},"import { createWalletClient, custom } from 'viem'\nimport { base } from 'viem/chains'\n\n//highlight-start\nconst [account] = await window.ethereum.request({ method: 'eth_requestAccounts' })\n//highlight-end\n\nconst client = createWalletClient({\n  //highlight-next-line\n  account,\n  chain: base,\n  transport: custom(window.ethereum)\n})\n\nclient.sendTransaction({ ... })\n")),(0,i.yg)("admonition",{type:"info"},(0,i.yg)("p",{parentName:"admonition"},"In addition to making a JSON-RPC request (",(0,i.yg)("inlineCode",{parentName:"p"},"eth_requestAccounts"),") to get an Account, viem provides various helper methods for creating an ",(0,i.yg)("inlineCode",{parentName:"p"},"Account"),", including: ",(0,i.yg)("a",{parentName:"p",href:"https://viem.sh/docs/accounts/privateKey.html"},(0,i.yg)("inlineCode",{parentName:"a"},"privateKeyToAccount")),", ",(0,i.yg)("a",{parentName:"p",href:"https://viem.sh/docs/accounts/mnemonic.html"},(0,i.yg)("inlineCode",{parentName:"a"},"mnemonicToAccount")),", and ",(0,i.yg)("a",{parentName:"p",href:"https://viem.sh/docs/accounts/hd.html"},(0,i.yg)("inlineCode",{parentName:"a"},"hdKeyToAccount")),"."),(0,i.yg)("p",{parentName:"admonition"},"To use Base Sepolia (testnet), replace ",(0,i.yg)("inlineCode",{parentName:"p"},"base")," with ",(0,i.yg)("inlineCode",{parentName:"p"},"baseSepolia"),".")),(0,i.yg)("h2",{id:"interacting-with-smart-contracts"},"Interacting with smart contracts"),(0,i.yg)("p",null,"You can use viem to interact with a smart contract on Base by creating a ",(0,i.yg)("inlineCode",{parentName:"p"},"Contract")," instance using ",(0,i.yg)("a",{parentName:"p",href:"https://viem.sh/docs/contract/getContract.html"},(0,i.yg)("inlineCode",{parentName:"a"},"getContract"))," and passing it the contract ABI, contract address, and ",(0,i.yg)("a",{parentName:"p",href:"https://viem.sh/docs/clients/public.html"},"Public")," and/or ",(0,i.yg)("a",{parentName:"p",href:"https://viem.sh/docs/clients/wallet.html"},"Wallet")," Client:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-javascript"},"import { getContract } from 'viem';\nimport { wagmiAbi } from './abi';\nimport { publicClient } from './client';\n\n// 1. Create contract instance\nconst contract = getContract({\n  address: 'CONTRACT_ADDRESS',\n  abi: wagmiAbi,\n  publicClient,\n});\n\n// 2. Call contract methods, listen to events, etc.\nconst result = await contract.read.totalSupply();\n")),(0,i.yg)("admonition",{type:"info"},(0,i.yg)("p",{parentName:"admonition"},(0,i.yg)("inlineCode",{parentName:"p"},"CONTRACT_ADDRESS")," is the address of the deployed contract.")))}u.isMDXComponent=!0}}]);