"use strict";(self.webpackChunk_app_base_docs=self.webpackChunk_app_base_docs||[]).push([[8448],{30876:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>m});var a=n(2784);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},i=Object.keys(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var c=a.createContext({}),l=function(t){var e=a.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},p=function(t){var e=l(t.components);return a.createElement(c.Provider,{value:e},t.children)},d="mdxType",h={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},u=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,i=t.originalType,c=t.parentName,p=s(t,["components","mdxType","originalType","parentName"]),d=l(n),u=r,m=d["".concat(c,".").concat(u)]||d[u]||h[u]||i;return n?a.createElement(m,o(o({ref:e},p),{},{components:n})):a.createElement(m,o({ref:e},p))}));function m(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=n.length,o=new Array(i);o[0]=u;var s={};for(var c in e)hasOwnProperty.call(e,c)&&(s[c]=e[c]);s.originalType=t,s[d]="string"==typeof t?t:r,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},62786:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var a=n(7896),r=(n(2784),n(30876));const i={title:"thirdweb SDK",slug:"/tools/thirdweb-sdk",description:"Documentation for using the thirdweb SDK for building web3 applications and interacting with smart contracts on Base. This page covers installation, initialization, and functionalities in various programming languages.",keywords:["thirdweb SDK","thirdweb","Base","Base mainnet","Base testnet","Base network","web3 applications","smart contracts","React","TypeScript"],hide_table_of_contents:!0},o="thirdweb SDK",s={unversionedId:"tools/thirdweb-sdk",id:"tools/thirdweb-sdk",title:"thirdweb SDK",description:"Documentation for using the thirdweb SDK for building web3 applications and interacting with smart contracts on Base. This page covers installation, initialization, and functionalities in various programming languages.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/tools/thirdweb-sdk.md",sourceDirName:"tools",slug:"/tools/thirdweb-sdk",permalink:"/docs/tools/thirdweb-sdk",draft:!1,tags:[],version:"current",frontMatter:{title:"thirdweb SDK",slug:"/tools/thirdweb-sdk",description:"Documentation for using the thirdweb SDK for building web3 applications and interacting with smart contracts on Base. This page covers installation, initialization, and functionalities in various programming languages.",keywords:["thirdweb SDK","thirdweb","Base","Base mainnet","Base testnet","Base network","web3 applications","smart contracts","React","TypeScript"],hide_table_of_contents:!0},sidebar:"developers",previous:{title:"ethers.js",permalink:"/docs/tools/ethers"},next:{title:"viem",permalink:"/docs/tools/viem"}},c={},l=[{value:"Install",id:"install",level:2},{value:"Initializing the SDK with Base",id:"initializing-the-sdk-with-base",level:2},{value:"Interacting with smart contracts",id:"interacting-with-smart-contracts",level:2},{value:"Using contract extension functions",id:"using-contract-extension-functions",level:3},{value:"Usage",id:"usage",level:4},{value:"Reading contract data",id:"reading-contract-data",level:3},{value:"Writing transactions",id:"writing-transactions",level:3}],p={toc:l},d="wrapper";function h(t){let{components:e,...n}=t;return(0,r.kt)(d,(0,a.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"thirdweb-sdk"},"thirdweb SDK"),(0,r.kt)("p",null,"thirdweb SDK is a library that enables developers to build web3 applications and interact with any EVM-compatible blockchain."),(0,r.kt)("p",null,"You can use the thirdweb SDK to build apps and interact with smart contracts deployed on the Base network."),(0,r.kt)("p",null,"The thirdweb SDK is available in various programming languages, including: ",(0,r.kt)("a",{parentName:"p",href:"https://portal.thirdweb.com/react"},"React"),", ",(0,r.kt)("a",{parentName:"p",href:"https://portal.thirdweb.com/react-native"},"React Native"),", ",(0,r.kt)("a",{parentName:"p",href:"https://portal.thirdweb.com/typescript"},"TypeScript"),", ",(0,r.kt)("a",{parentName:"p",href:"https://portal.thirdweb.com/python"},"Python"),", ",(0,r.kt)("a",{parentName:"p",href:"https://portal.thirdweb.com/go"},"Go"),", and ",(0,r.kt)("a",{parentName:"p",href:"https://portal.thirdweb.com/unity"},"Unity"),"."),(0,r.kt)("p",null,"Visit the ",(0,r.kt)("a",{parentName:"p",href:"https://portal.thirdweb.com/cli"},"thirdweb documentation")," for more instructions on using the thirdweb SDKs."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"install"},"Install"),(0,r.kt)("p",null,"To install the thirdweb SDK, run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @thirdweb-dev/sdk ethers@5\n")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"initializing-the-sdk-with-base"},"Initializing the SDK with Base"),(0,r.kt)("p",null,"To get started using the SDK, you must first initialize an instance of ",(0,r.kt)("inlineCode",{parentName:"p"},"ThirdWebSDK"),", and connect to the Base network by passing in the ",(0,r.kt)("inlineCode",{parentName:"p"},"Base")," chain."),(0,r.kt)("p",null,"To initialize the SDK with the Base network and get a contract:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { Base } from '@thirdweb-dev/chains';\nimport { ThirdwebSDK } from '@thirdweb-dev/sdk/evm';\n\nconst sdk = new ThirdwebSDK(Base);\nconst contract = await sdk.getContract('0x0000000000000000000000000000000000000000');\n")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"The code snippet above uses the ",(0,r.kt)("a",{parentName:"p",href:"https://portal.thirdweb.com/react"},"React SDK"),". The thirdweb SDKs are also available in ",(0,r.kt)("a",{parentName:"p",href:"https://portal.thirdweb.com/react-native"},"React Native"),", ",(0,r.kt)("a",{parentName:"p",href:"https://portal.thirdweb.com/typescript"},"TypeScript"),", ",(0,r.kt)("a",{parentName:"p",href:"https://portal.thirdweb.com/python"},"Python"),", ",(0,r.kt)("a",{parentName:"p",href:"https://portal.thirdweb.com/go"},"Go"),", and ",(0,r.kt)("a",{parentName:"p",href:"https://portal.thirdweb.com/unity"},"Unity"),"."),(0,r.kt)("p",{parentName:"admonition"},"If alternatively you'd like to initialize the SDK with Base Sepolia (testnet), use the following code instead:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { BaseSepoliaTestnet } from '@thirdweb-dev/chains';\nimport { ThirdwebSDK } from '@thirdweb-dev/sdk/evm';\n\nconst sdk = new ThirdwebSDK(BaseSepoliaTestnet);\nconst contract = await sdk.getContract('0x0000000000000000000000000000000000000000');\n"))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"interacting-with-smart-contracts"},"Interacting with smart contracts"),(0,r.kt)("p",null,"Once you initialize the SDK and connect to a smart contract deployed to Base, you can start calling functions on it using the SDK."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Any interaction you make with a smart contract will be made from the connected wallet automatically.")),(0,r.kt)("h3",{id:"using-contract-extension-functions"},"Using contract extension functions"),(0,r.kt)("p",null,"The thirdweb SDK provides convenience functions when your smart contract uses ",(0,r.kt)("a",{parentName:"p",href:"https://portal.thirdweb.com/contractkit/extensions"},"extensions"),". This is the easiest way to read data and write transactions with your smart contracts."),(0,r.kt)("p",null,"For example, if your contract implements the ",(0,r.kt)("a",{parentName:"p",href:"https://portal.thirdweb.com/contractkit/erc721"},"ERC721")," extension, you can utilize all of the functions of the ",(0,r.kt)("a",{parentName:"p",href:"https://portal.thirdweb.com/sdk/interacting-with-contracts/erc721"},"corresponding erc721 standard")," in the SDK."),(0,r.kt)("p",null,"As an example, below is a code snippet that uses ",(0,r.kt)("a",{parentName:"p",href:"https://portal.thirdweb.com/react/react.useownednfts"},(0,r.kt)("inlineCode",{parentName:"a"},"useOwnedNFTs"))," hook to get a list of NFTs owned by a single wallet address:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { useOwnedNFTs } from '@thirdweb-dev/react';\n\nconst { data, isLoading, error } = useOwnedNFTs(contract, '{{wallet_address}}');\n")),(0,r.kt)("h4",{id:"usage"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { useOwnedNFTs, useContract, useAddress } from '@thirdweb-dev/react';\n\n// Your smart contract address\nconst contractAddress = '{{contract_address}}';\n\nfunction App() {\n  const address = useAddress();\n  const { contract } = useContract(contractAddress);\n  const { data, isLoading, error } = useOwnedNFTs(contract, address);\n}\n")),(0,r.kt)("p",null,"For more examples on using contract extension functions, visit the ",(0,r.kt)("a",{parentName:"p",href:"https://portal.thirdweb.com/sdk/interacting-with-contracts#using-contract-extensions"},"thirdweb developer documentation"),"."),(0,r.kt)("h3",{id:"reading-contract-data"},"Reading contract data"),(0,r.kt)("p",null,"If your contract doesn\u2019t use any ",(0,r.kt)("a",{parentName:"p",href:"https://portal.thirdweb.com/contractkit/extensions"},"extensions"),", or you want to directly call functions on your smart contract to read data, you can use the ",(0,r.kt)("a",{parentName:"p",href:"https://portal.thirdweb.com/react/react.usecontractread"},(0,r.kt)("inlineCode",{parentName:"a"},"useContractRead"))," hook."),(0,r.kt)("p",null,"Read data on your contract from a connected wallet:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const { contract } = useContract('{{contract_address}}');\nconst { data: myData, isLoading } = useContractRead(contract, 'myFunction');\n")),(0,r.kt)("h3",{id:"writing-transactions"},"Writing transactions"),(0,r.kt)("p",null,"If your contract doesn\u2019t use any ",(0,r.kt)("a",{parentName:"p",href:"https://portal.thirdweb.com/contractkit/extensions"},"extensions"),", or you want to directly call functions on your smart contract to write data, you can use the ",(0,r.kt)("a",{parentName:"p",href:"https://portal.thirdweb.com/react/react.usecontractwrite"},(0,r.kt)("inlineCode",{parentName:"a"},"useContractWrite"))," hook."),(0,r.kt)("p",null,"Make transactions on your contract from a connected wallet:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const { contract } = useContract('{{contract_address}}');\nconst { mutateAsync: myFunctionAsync } = useContractWrite(contract, 'myFunction');\nconst tx = await myFunctionAsync(['argument1', 'argument2']); // Call the function\n")))}h.isMDXComponent=!0}}]);