{
  "address": "0x4a8Fc8C1662E177d2C5aA52350211e3D97B76d30",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_salesPerson",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_engineeringManager",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "engineeringManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "salesPerson",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x6422b9c986638b537b8546180dbe2870e62ef5f3459de351f24407030219d145",
  "receipt": {
    "to": null,
    "from": "0x0919C594E549545374772246B0D433a4988A0eC9",
    "contractAddress": "0x4a8Fc8C1662E177d2C5aA52350211e3D97B76d30",
    "transactionIndex": 2,
    "gasUsed": "146991",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xae266f9033acb173acb1b921523558f096f239fd5e2983c8ae89628c7a31804e",
    "transactionHash": "0x6422b9c986638b537b8546180dbe2870e62ef5f3459de351f24407030219d145",
    "logs": [],
    "blockNumber": 4572469,
    "cumulativeGasUsed": "235466",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xFf9131CfFfc2c9d7bEb234a92d07BA8356A61208",
    "0xe673b21039b1e098d68782AB6801f1836E2e0E9b"
  ],
  "numDeployments": 1,
  "solcInputHash": "840ae9efa03c3cca22907454cb805100",
  "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_salesPerson\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_engineeringManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"engineeringManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"salesPerson\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Exemplars/InheritanceExercise.sol\":\"InheritanceSubmission\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/Exemplars/InheritanceExercise.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.23;\\n\\nabstract contract Employee {\\n    uint public idNumber;\\n    uint public managerId;\\n\\n    constructor(uint _idNumber, uint _managerId) {\\n        idNumber = _idNumber;\\n        managerId = _managerId;\\n    }\\n\\n    function getAnnualCost() public view virtual returns (uint);\\n}\\n\\ncontract Salaried is Employee {\\n    uint public annualSalary;\\n\\n    constructor(\\n        uint _annualSalary,\\n        uint _idNumber,\\n        uint _managerId\\n    ) Employee(_idNumber, _managerId) {\\n        annualSalary = _annualSalary;\\n    }\\n\\n    function getAnnualCost() public view override returns (uint) {\\n        return annualSalary;\\n    }\\n}\\n\\ncontract Hourly is Employee {\\n    uint public hourlyRate;\\n\\n    constructor(\\n        uint _hourlyRate,\\n        uint _idNumber,\\n        uint _managerId\\n    ) Employee(_idNumber, _managerId) {\\n        hourlyRate = _hourlyRate;\\n    }\\n\\n    function getAnnualCost() public view override returns (uint) {\\n        return hourlyRate * 2080;\\n    }\\n}\\n\\ncontract Manager {\\n    uint[] public reportIds;\\n\\n    function addReport(uint _id) public {\\n        reportIds.push(_id);\\n    }\\n\\n    function resetReports() public {\\n        delete reportIds;\\n    }\\n}\\n\\ncontract SalesPerson is Hourly {\\n    constructor(\\n        uint _hourlyRate,\\n        uint _idNumber,\\n        uint _managerId\\n    ) Hourly(_hourlyRate, _idNumber, _managerId) {}\\n}\\n\\ncontract EngineeringManager is Salaried, Manager {\\n    constructor(\\n        uint _annualSalary,\\n        uint _idNumber,\\n        uint _managerId\\n    ) Salaried(_annualSalary, _idNumber, _managerId) {}\\n}\\n\\ncontract InheritanceSubmission {\\n    address public salesPerson;\\n    address public engineeringManager;\\n\\n    constructor(address _salesPerson, address _engineeringManager) {\\n        salesPerson = _salesPerson;\\n        engineeringManager = _engineeringManager;\\n    }\\n}\\n\",\"keccak256\":\"0x4ba6a6e95c961e4f85408581e369cc39753e9c59a558f7fc8f1197b684e39a3b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161019138038061019183398101604081905261002f9161007c565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691161790556100af565b80516001600160a01b038116811461007757600080fd5b919050565b6000806040838503121561008f57600080fd5b61009883610060565b91506100a660208401610060565b90509250929050565b60d4806100bd6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80630f628194146037578063687981dd14607f575b600080fd5b60005460569073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b60015460569073ffffffffffffffffffffffffffffffffffffffff168156fea26469706673582212200baef88f27c2276f47d4114024407800370ac13b312e5be11db2b16a63f47eb264736f6c63430008170033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060325760003560e01c80630f628194146037578063687981dd14607f575b600080fd5b60005460569073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b60015460569073ffffffffffffffffffffffffffffffffffffffff168156fea26469706673582212200baef88f27c2276f47d4114024407800370ac13b312e5be11db2b16a63f47eb264736f6c63430008170033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 12610,
        "contract": "contracts/Exemplars/InheritanceExercise.sol:InheritanceSubmission",
        "label": "salesPerson",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 12612,
        "contract": "contracts/Exemplars/InheritanceExercise.sol:InheritanceSubmission",
        "label": "engineeringManager",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}